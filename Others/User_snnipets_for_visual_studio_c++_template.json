{
	"Template with test case": {
		"prefix": [
			"include"
		],
		"body": [
			"#include<bits/stdc++.h>\n\n// #include<ext/pb_ds/assoc_container.hpp>\n// #include<ext/pb_ds/tree_policy.hpp>\n// using namespace __gnu_pbds;\n// typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set; // find_by_order, order_of_key\n\nusing namespace std; \ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<bool> vb;\ntypedef vector<vi> vvi;\ntypedef vector<vl> vvl;\ntypedef pair<ll,ll> pll;\ntypedef vector<pll> vpll;\ntypedef vector<ll> vl;\n\n#define All(a) a.begin(),a.end()\n#define FOR(i,a,b) for(int i=a;i<b;i++)\ntemplate<typename T> void get_vector(T&a){for(auto&e:a)cin>>e;}\ntemplate<typename T> void put_vector(T a){for(auto e:a)cout<<e<<\" \";cout<<endl;}\n\n\nvoid solve()\n{\n    ${0://start coding here}\n}\n\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n\n    int T;\n    cin >> T;\n    while(T--)\n        solve();\n    return 0;\n}"],
		"description": "Template with test case"
	},
	
	"Template without test case": {
		"prefix": [
			"include"
		],
		"body": [
			"#include<bits/stdc++.h>\n\n// #include<ext/pb_ds/assoc_container.hpp>\n// #include<ext/pb_ds/tree_policy.hpp>\n// using namespace __gnu_pbds;\n// typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set; // find_by_order, order_of_key\n\nusing namespace std; \ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<bool> vb;\ntypedef vector<vi> vvi;\ntypedef vector<vl> vvl;\ntypedef pair<ll,ll> pll;\ntypedef vector<pll> vpll;\ntypedef vector<ll> vl;\n\n#define All(a) a.begin(),a.end()\n#define FOR(i,a,b) for(int i=a;i<b;i++)\ntemplate<typename T> void get_vector(T&a){for(auto&e:a)cin>>e;}\ntemplate<typename T> void put_vector(T a){for(auto e:a)cout<<e<<\" \";cout<<endl;}\n\n\n\n\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n\n    ${0://start coding here}\n    return 0;\n}"
		],
		"description": "Template without test case"
	}
}
