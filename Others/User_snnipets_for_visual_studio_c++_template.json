{
	"Template with test case": {
	  "prefix": ["include"],
	  "body": ["/****Bismillahir rahmanir rahim****/\n\n#include<bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long            ll;\ntypedef long double          ld;\ntypedef vector<int>          vi;\ntypedef vector<long long>    vl;\ntypedef vector<double>       vd;\n\n#define All(a) a.begin(),a.end()\n\ntemplate <typename T>\nvoid get_vector(T &a)\n{\n    for(auto &e: a) cin >> e;\n}\n\ntemplate <typename T>\nvoid put_vector(T a)\n{\n    for(auto e :a)cout << e << \" \";\n    cout << endl;\n}\nvoid solve()\n{\n    ${0://start coding here}\n}\n\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n\n    int T;\n    cin >> T;\n    while(T--)\n        solve();\n    return 0;\n}\n"],
	  "description": "Template with test case"
	},

	"Template with test case and parameter": {
		"prefix": ["include"],
		"body": ["/****Bismillahir rahmanir rahim****/\n\n#include<bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long            ll;\ntypedef long double          ld;\ntypedef vector<int>          vi;\ntypedef vector<long long>    vl;\ntypedef vector<double>       vd;\n\n#define All(a) a.begin(),a.end()\n\ntemplate <typename T>\nvoid get_vector(T &a)\n{\n    for(auto &e: a) cin >> e;\n}\n\ntemplate <typename T>\nvoid put_vector(T a)\n{\n    for(auto e :a)cout << e << \" \";\n    cout << endl;\n}\nvoid solve(int cs)\n{\n    ${0://start coding here}\n}\n\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n\n    int T;\n    cin >> T;\n    for(int i = 1; i<=T; i++)solve(i);\n    return 0;\n}\n"],
		"description": "Template with test case"
	  },

	"Template without test case": {
		"prefix": ["include"],
		"body": ["/****Bismillahir rahmanir rahim****/\n\n#include<bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long            ll;\ntypedef long double          ld;\ntypedef vector<int>          vi;\ntypedef vector<long long>    vl;\ntypedef vector<double>       vd;\n\n#define All(a) a.begin(),a.end()\n\ntemplate <typename T>\nvoid get_vector(T &a)\n{\n    for(auto &e: a) cin >> e;\n}\n\ntemplate <typename T>\nvoid put_vector(T a)\n{\n    for(auto e :a)cout << e << \" \";\n    cout << endl;\n}\n\n\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n\n    ${0://start coding here}\n    return 0;\n}\n"],
		"description": "Template without test case"
	  }

	  
}
